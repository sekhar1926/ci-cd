# ===================================================================================
# ==         MULTI-REGION, MULTI-ENVIRONMENT DEPLOYMENT TEMPLATE (v2.1)          ==
# ===================================================================================
#
# This template orchestrates deployments to DEV (single-region) and QA/PROD (dual-region).
# CORRECTED SYNTAX for pool and strategy blocks.
#

parameters:
  # ... (All parameters are the same as before)
  - name: serviceName
    type: string
  - name: acrName
    type: string
  - name: chartPath
    type: string
  - name: devAgentPoolName
    type: string
  - name: qaAgentPoolName
    type: string
  - name: prodAgentPoolName
    type: string
  - name: devAKSConnection
    type: string
  - name: qaRegion1AKSConnection
    type: string
  - name: qaRegion2AKSConnection
    type: string
  - name: prodRegion1AKSConnection
    type: string
  - name: prodRegion2AKSConnection
    type: string
  - name: devOverrideValues
    type: string
    default: ''
  - name: qaOverrideValues
    type: string
    default: ''
  - name: prodOverrideValues
    type: string
    default: ''

stages:
# ============================== DEPLOY TO DEV (Single Region) ==============================
- stage: Deploy_Dev
  displayName: 'Deploy to Dev Environment'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  variables:
    imageTag: $[ stageDependencies.Build.BuildJob.outputs['SetImageTag.imageTag'] ]
  jobs:
  - deployment: DeployToDevAKS
    displayName: 'Deploy Helm Chart to DEV AKS'
    environment: 'DEV Environment'
    pool:
      name: ${{ parameters.devAgentPoolName }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmDeploy@0
            inputs:
              connectionType: 'AzureResourceGroup'
              azureSubscription: ${{ parameters.devAKSConnection }}
              namespace: '${{ parameters.serviceName }}-dev'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(Pipeline.Workspace)/templates/${{ parameters.chartPath }}'
              releaseName: '${{ parameters.serviceName }}'
              install: true
              overrideValues: |
                image.repository=${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}
                image.tag=$(imageTag)
                ${{ parameters.devOverrideValues }}

# ============================== DEPLOY TO QA (Dual Region) ===============================
- stage: Deploy_QA
  displayName: 'Deploy to QA Environments (Dual Region)'
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
  variables:
    imageTag: $[ stageDependencies.Build.BuildJob.outputs['SetImageTag.imageTag'] ]
  jobs:
  # --- QA Region 1 Job ---
  - deployment: DeployToQARegion1
    displayName: 'Deploy to QA Region 1'
    environment: 'QA Environment - Region 1'
    pool:
      name: ${{ parameters.qaAgentPoolName }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmDeploy@0
            inputs:
              connectionType: 'AzureResourceGroup'
              azureSubscription: ${{ parameters.qaRegion1AKSConnection }}
              namespace: '${{ parameters.serviceName }}-qa'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(Pipeline.Workspace)/templates/${{ parameters.chartPath }}'
              releaseName: '${{ parameters.serviceName }}'
              install: true
              overrideValues: |
                image.repository=${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}
                image.tag=$(imageTag)
                ${{ parameters.qaOverrideValues }}
  # --- QA Region 2 Job (runs in parallel) ---
  - deployment: DeployToQARegion2
    displayName: 'Deploy to QA Region 2'
    environment: 'QA Environment - Region 2'
    pool:
      name: ${{ parameters.qaAgentPoolName }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmDeploy@0
            inputs:
              connectionType: 'AzureResourceGroup'
              azureSubscription: ${{ parameters.qaRegion2AKSConnection }}
              namespace: '${{ parameters.serviceName }}-qa'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(Pipeline.Workspace)/templates/${{ parameters.chartPath }}'
              releaseName: '${{ parameters.serviceName }}'
              install: true
              overrideValues: |
                image.repository=${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}
                image.tag=$(imageTag)
                ${{ parameters.qaOverrideValues }}

# ============================= DEPLOY TO PROD (Dual Region) ==============================
- stage: Deploy_Prod
  displayName: 'Deploy to Prod Environments (Dual Region)'
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  variables:
    imageTag: $[ stageDependencies.Build.BuildJob.outputs['SetImageTag.imageTag'] ]
  jobs:
  # --- Prod Region 1 Job ---
  - deployment: DeployToProdRegion1
    displayName: 'Deploy to Prod Region 1'
    environment: 'PROD Environment - Region 1'
    pool:
      name: ${{ parameters.prodAgentPoolName }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmDeploy@0
            inputs:
              connectionType: 'AzureResourceGroup'
              azureSubscription: ${{ parameters.prodRegion1AKSConnection }}
              namespace: '${{ parameters.serviceName }}-prod'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(Pipeline.Workspace)/templates/${{ parameters.chartPath }}'
              releaseName: '${{ parameters.serviceName }}'
              install: true
              overrideValues: |
                image.repository=${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}
                image.tag=$(imageTag)
                ${{ parameters.prodOverrideValues }}
  # --- Prod Region 2 Job (runs in parallel) ---
  - deployment: DeployToProdRegion2
    displayName: 'Deploy to Prod Region 2'
    environment: 'PROD Environment - Region 2'
    pool:
      name: ${{ parameters.prodAgentPoolName }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmDeploy@0
            inputs:
              connectionType: 'AzureResourceGroup'
              azureSubscription: ${{ parameters.prodRegion2AKSConnection }}
              namespace: '${{ parameters.serviceName }}-prod'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(Pipeline.Workspace)/templates/${{ parameters.chartPath }}'
              releaseName: '${{ parameters.serviceName }}'
              install: true
              overrideValues: |
                image.repository=${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}
                image.tag=$(imageTag)
                ${{ parameters.prodOverrideValues }}