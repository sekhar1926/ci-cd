# ===================================================================================
# ==           README: UNIVERSAL DEPLOYMENT TEMPLATE (Values File)               ==
# ===================================================================================
#
# PURPOSE:
# This template is a reusable "step" that performs a Helm deployment. It is designed
# to be called from a job within a larger pipeline. It uses the robust "Values File"
# strategy, which is the correct way to handle complex configurations.
#
# HOW IT WORKS:
# 1.  **Receives Parameters:** It takes all necessary information (service name,
#     cluster connection, and a path to a configuration file) as parameters from
#     the calling job.
#
# 2.  **Uses 'valueFile':** It uses the 'valueFile' input of the HelmDeploy task. This
#     tells Helm to use the '--values' flag, which correctly parses complex YAML
#     from the provided file, including lists and nested objects. This completely
#     avoids the unreliable behavior of the 'overrideValues' block for static config.
#
# 3.  **Injects Dynamic Data:** It still uses 'overrideValues' for its intended purpose:
#     injecting dynamic, pipeline-generated data like the Docker image tag, which
#     cannot exist in a static file.
#
# 4.  **Generic and Stable:** The template itself is generic and stable. It contains
#     no environment-specific logic. All configuration is delegated to the
#     application repository's values files, which is a best practice.
#
# PARAMETERS (Inputs from the calling job):
#   - serviceName: The name of the microservice.
#   - acrName: The name of your Azure Container Registry.
#   - chartPath: The path to the common Helm chart within the 'cicd-platform' repo.
#   - valuesFile: The path to the specific environment values file (e.g., helm-values/dev.yaml).
#   - kubeServiceConnection: The name of the Kubernetes Service Connection for the target cluster.
#
# ===================================================================================

parameters:
  - name: serviceName
    type: string
  - name: acrName
    type: string
  - name: chartPath
    type: string
  - name: valuesFile # The path to the specific environment values file
    type: string
  - name: kubeServiceConnection
    type: string

# This template consists of a single step to be injected into a parent job.
steps:
- task: HelmDeploy@0
  displayName: 'Deploy Helm Chart using values from ${{ parameters.valuesFile }}'
  inputs:
    # Use the secure, direct connection to the Kubernetes cluster.
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: ${{ parameters.kubeServiceConnection }}

    # The Helm 'upgrade --install' command is the standard for CI/CD.
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: '$(Pipeline.Workspace)/templates/${{ parameters.chartPath }}'
    releaseName: '${{ parameters.serviceName }}'
    install: true # Ensures the chart is installed if it's the first time.
    createNamespace: true # Safely creates the namespace if it doesn't exist.

    # This is the KEY to this robust strategy.
    # It passes the specified file to Helm's '--values' flag.
    valueFile: '$(System.DefaultWorkingDirectory)/${{ parameters.valuesFile }}'
    
    # This is used ONLY for values generated during the pipeline run.
    # It is passed to Helm's '--set' flag.
    overrideValues: |
      image.repository=${{ parameters.acrName }}.azurecr.io/${{ parameters.serviceName }}
      image.tag=$(imageTag)