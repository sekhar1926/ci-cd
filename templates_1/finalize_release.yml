# ===================================================================================
# ==                 README: Finalize Release - Step Template                    ==
# ===================================================================================
#
# PURPOSE:
# This is a STEP TEMPLATE. It contains the sequence of steps required to merge an
# approved 'release/*' branch to 'main', create the official version tag, and
# clean up.
#
# HOW IT'S USED:
# This template is called from the 'steps:' block of a job within the 'Promote_To_Prod'
# stage of the main application pipeline.
#
# ===================================================================================

parameters:
- name: microserviceProjectName
  type: string
- name: repositoryName
  type: string
- name: releaseBranchName
  type: string

steps:
- task: Bash@3
  displayName: 'Configure Git Identity'
  inputs: { script: 'git config --global user.email "svc.pipeline@yourcompany.com" && git config --global user.name "Azure DevOps Pipeline"' }

- task: Bash@3
  displayName: 'Clone Repo'
  inputs:
    env: { GIT_TOKEN: $(System.AccessToken) }
    script: |
      set -e
      PROJECT_NAME_ENCODED=$(echo "${{ parameters.microserviceProjectName }}" | sed 's/ /%20/g')
      REPO_URL="https://x-token-auth:$(GIT_TOKEN)@dev.azure.com/YourOrgName/${PROJECT_NAME_ENCODED}/_git/${{ parameters.repositoryName }}"
      git clone "$REPO_URL" .
      git fetch --all --tags

- task: Bash@3
  displayName: 'Merge, Tag, and Push Release'
  inputs:
    env: { GIT_TOKEN: $(System.AccessToken) }
    script: |
      set -e
      RELEASE_BRANCH="${{ parameters.releaseBranchName }}"
      AUTH_REPO_URL="https://x-token-auth:$(GIT_TOKEN)@${(git config --get remote.origin.url)#https://}"

      git checkout main
      git merge "origin/$RELEASE_BRANCH" --no-ff -m "Merge release: $RELEASE_BRANCH"
      git push $AUTH_REPO_URL main

      VERSION_TAG="v${RELEASE_BRANCH#release/}"
      git tag $VERSION_TAG
      git push $AUTH_REPO_URL $VERSION_TAG

      git checkout dev
      git merge "origin/$RELEASE_BRANCH" --no-ff -m "Merge release: $RELEASE_BRANCH into dev"
      git push $AUTH_REPO_URL dev

      git push $AUTH_REPO_URL --delete "$RELEASE_BRANCH"
      echo "Release $VERSION_TAG finalized. This will trigger a new pipeline run for Production."