# ===================================================================================
# ==            Configuration Values for DEV Environment                         ==
# ===================================================================================
#
# This file contains the complete configuration for the 'manubank-transactions-microservice'
# when it is deployed to the DEV cluster. It is passed to Helm using the '--values'
# flag, which correctly handles complex structures like the 'secrets' list.
# This solves the "helm upgrade requires 2 arguments" error.
#

# The Kubernetes namespace where this service will be deployed.
namespace: smbcmanubank

# Number of pods to run for this service in the dev environment.
replicaCount: 1

# Routing settings for the NGINX Ingress Controller.
virtualServerRoute:
  # The path that will route traffic to this service.
  path: "/core/banking/transactions1"
  # IMPORTANT: This should be the name of your central/master VirtualServer in the dev cluster.
  # I have inferred this from your 'host' value. Please verify it is correct.
  parentVirtualServerName: "apis-dev-east-vs"
  # The namespace where the master VirtualServer is deployed.
  parentVirtualServerNamespace: "nginx-ingress"

# Non-secret environment variables that will be injected into the container.
extraEnvs:
  ENVIRONMENT: "dev"
  EAIAppNumber: "ManuBankMiddleware"
  ORG_ID: "cf0e3fce-3e3f-45f8-94bb-a4936a7e9c74"
  KEY_COLLECTION: "customer-encryption-database.customer-keys"
  DEK_NAME: "wire-dek_secret"

# Secret management configuration using the CSI Secret Store driver.
secretProvider:
  parameters:
    keyvaultName: "kv-wire-dev-dSb8-use"
    tenantId: "c7f6413d-1e73-45d2-b0da-a68713b515a7"
    # The managed identity used by the pod to access the Key Vault.
    userAssignedIdentityID: "52271e03-bdfe-4415-9be1-330b3ab4d479"

    # This is a list of all secrets to fetch from Azure Key Vault.
    # Each item will be made available as an environment variable in the application.
    secrets:
    - name: fis-authorization-user-secret
      alias: FIS_AUTHORIZATION_USER_SECRET
    - name: fis-client-secret
      alias: FIS_CLIENT_SECRET
    - name: vault-encryption-principal-tenant-id
      alias: VAULT_ENCRYPTION_PRINCIPAL_TENANT_ID
    - name: vault-encryption-principal-client-id
      alias: VAULT_ENCRYPTION_PRINCIPAL_CLIENT_ID
    - name: vault-encryption-principal-client-secret
      alias: VAULT_ENCRYPTION_PRINCIPAL_CLIENT_SECRET
    - name: transactions-mongodb-uri
      alias: MONGODB_URI


# ... (replicaCount, image, service, virtualServerRoute sections are the same) ...

# -- Non-Secret Environment Variables --
# DEPRECATED: extraEnvs: {}

# NEW, MORE POWERFUL env section. This is a list of environment variable objects.
# It allows for both simple 'value' and complex 'valueFrom' variables.
env: []
#  Example of a simple variable:
#  - name: LOGGING_LEVEL
#    value: "INFO"
#
#  Example of a Downward API variable (like your use case):
#  - name: MY_POD_NAME
#    valueFrom:
#      fieldRef:
#        apiVersion: v1
#        fieldPath: metadata.name
#
#  Example of a variable from a ConfigMap:
#  - name: MY_CONFIG_VALUE
#    valueFrom:
#      configMapKeyRef:
#        name: my-configmap
#        key: my-key

# ... (secretProvider section is the same) ...


# ... (namespace, replicaCount, virtualServerRoute are the same) ...

# NEW: Use the 'env' list instead of 'extraEnvs'
env:
  - name: SPRING_PROFILES_ACTIVE
    value: "dev"
  - name: LOGGING_LEVEL
    value: "DEBUG"
  # This is your specific use case for the pod name
  - name: MY_POD_NAME
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: metadata.name
  # You can also add other Downward API fields
  - name: MY_POD_IP
    valueFrom:
      fieldRef:
        fieldPath: status.podIP
  - name: MY_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace

# The secretProvider section remains exactly the same
secretProvider:
  parameters:
    keyvaultName: "order-service-dev-kv"
    # ... etc.


# ... (apiVersion, kind, metadata, etc. are the same) ...
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          # ... (ports are the same) ...

          # ============================ THE FIX IS HERE ============================
          # This is the new, more flexible environment variable block.
          env:
            # First, we loop through the 'env' list from the values.yaml file.
            # The 'toYaml' function correctly formats the complex objects.
            {{- if .Values.env }}
            {{- .Values.env | toYaml | nindent 12 }}
            {{- end }}
          
          # The 'envFrom' for injecting secrets from the SecretProviderClass
          # remains the same.
          {{- if and .Values.secretProvider.enabled .Values.secretProvider.parameters.secrets }}
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-secrets
          {{- end }}
          # =======================================================================

          # ... (volumeMounts, etc. are the same) ...
